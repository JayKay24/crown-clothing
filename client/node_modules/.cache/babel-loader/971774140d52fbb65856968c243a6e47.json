{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport \".\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection(\"collections\");\n  collectionRef.get().then(snapShot => {\n    const collectionsMap = convertCollectionSnapshotToMap(snapShot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n    this.setState({\n      loading: false\n    });\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/jamesnjuguna/Desktop/personal_learning/javascript/react/complete_react_developer_2020/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","convertCollectionSnapshotToMap","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapShot","collectionsMap","dispatch","fetchCollectionsSuccess","setState","loading","catch","error","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,OAAe,GAAf;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMC,cAAc,GAAGV,8BAA8B,CAACS,QAAD,CAArD;AACAE,IAAAA,QAAQ,CAACC,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACA,SAAKG,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD,GANH,EAOGC,KAPH,CAOUC,KAAD,IAAWL,QAAQ,CAACM,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAP5B;AAQD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMrB,SAAS,CACbG,eAAe,CAACmB,uBADH,EAEblB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\n\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\n\nimport {} from \".\"\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  const collectionRef = firestore.collection(\"collections\");\n\n  collectionRef\n    .get()\n    .then((snapShot) => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapShot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n      this.setState({ loading: false });\n    })\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}