{"ast":null,"code":"import { takeEvery, call } from \"redux-saga/effects\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection(\"collections\");\n  const snapShot = yield collectionRef.get();\n  const collectionsMap = yield call(con); // collectionRef\n  //   .get()\n  //   .then((snapShot) => {\n  //     const collectionsMap = convertCollectionSnapshotToMap(snapShot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     this.setState({ loading: false });\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/jamesnjuguna/Desktop/personal_learning/javascript/react/complete_react_developer_2020/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapShot","get","collectionsMap","con","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACc,GAAD,CAAjC,CANuC,CAQvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CACbM,eAAe,CAACW,uBADH,EAEbV,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\n\nimport {\n  firestore,\n  convertCollectionSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n\n  const collectionRef = firestore.collection(\"collections\");\n\n  const snapShot = yield collectionRef.get();\n  const collectionsMap = yield call(con)\n\n  // collectionRef\n  //   .get()\n  //   .then((snapShot) => {\n  //     const collectionsMap = convertCollectionSnapshotToMap(snapShot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //     this.setState({ loading: false });\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}