{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyCx-co7xXqvdiAI6-rBiRH6tQ0Zl5NKX7o\",\n  authDomain: \"crown-backend-9b733.firebaseapp.com\",\n  databaseURL: \"https://crown-backend-9b733.firebaseio.com\",\n  projectId: \"crown-backend-9b733\",\n  storageBucket: \"crown-backend-9b733.appspot.com\",\n  messagingSenderId: \"664929363642\",\n  appId: \"1:664929363642:web:1c73962f8a8b02db370483\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n\n  for (let category in objectsToAdd) {\n    if (objectsToAdd.hasOwnProperty(category)) {\n      const newDocRef = collectionRef.doc();\n      const {\n        title,\n        items\n      } = batch.set(newDocRef, objectsToAdd[category]);\n    }\n  } // console.log(\"objects here\", objectsToAdd);\n  // console.log(collectionRef);\n\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/jamesnjuguna/Desktop/personal_learning/javascript/react/complete_react_developer_2020/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","category","hasOwnProperty","newDocRef","title","items","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,qCAFC;AAGbC,EAAAA,WAAW,EAAE,4CAHA;AAIbC,EAAAA,SAAS,EAAE,qBAJE;AAKbC,EAAAA,aAAa,EAAE,iCALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE;AAPM,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAAEJ,QAAAA,WAAF;AAAeC,QAAAA,KAAf;AAAsBC,QAAAA,SAAtB;AAAiC,WAAGV;AAApC,OAAZ,CAAN;AACD,KAFD,CAEE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAlBM;AAoBPZ,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB;AAEA,OAAO,MAAM4B,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAuC;AAC9E,QAAMC,aAAa,GAAGnB,SAAS,CAACoB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGrB,SAAS,CAACqB,KAAV,EAAd;;AACA,OAAK,IAAIC,QAAT,IAAqBJ,YAArB,EAAmC;AACjC,QAAIA,YAAY,CAACK,cAAb,CAA4BD,QAA5B,CAAJ,EAA2C;AACzC,YAAME,SAAS,GAAGL,aAAa,CAAClB,GAAd,EAAlB;AACA,YAAM;AAAEwB,QAAAA,KAAF;AAASC,QAAAA;AAAT,UACNL,KAAK,CAACX,GAAN,CAAUc,SAAV,EAAqBN,YAAY,CAACI,QAAD,CAAjC,CADA;AAED;AACF,GAV6E,CAY9E;AACA;;AACD,CAdM;AAgBP,OAAO,MAAMK,IAAI,GAAGxC,QAAQ,CAACwC,IAAT,EAAb;AACP,OAAO,MAAM3B,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAM4B,QAAQ,GAAG,IAAIzC,QAAQ,CAACwC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAezC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCx-co7xXqvdiAI6-rBiRH6tQ0Zl5NKX7o\",\n  authDomain: \"crown-backend-9b733.firebaseapp.com\",\n  databaseURL: \"https://crown-backend-9b733.firebaseio.com\",\n  projectId: \"crown-backend-9b733\",\n  storageBucket: \"crown-backend-9b733.appspot.com\",\n  messagingSenderId: \"664929363642\",\n  appId: \"1:664929363642:web:1c73962f8a8b02db370483\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({ displayName, email, createdAt, ...additionalData });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(config);\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  for (let category in objectsToAdd) {\n    if (objectsToAdd.hasOwnProperty(category)) {\n      const newDocRef = collectionRef.doc();\n      const { title, items } = \n      batch.set(newDocRef, objectsToAdd[category]);\n    }\n  }\n  \n  // console.log(\"objects here\", objectsToAdd);\n  // console.log(collectionRef);\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}